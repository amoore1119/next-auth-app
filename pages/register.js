import Head from "next/head";
import React, { useState } from "react";
import Layout from "../layout/layout";
import styles from "../styles/Form.module.css";
import { FcGoogle } from "react-icons/fc";
import { GoMarkGithub } from "react-icons/go";
import { HiAtSymbol, HiFingerPrint, HiOutlineUser } from "react-icons/hi";
import Link from "next/link";
import { useFormik } from "formik";
import { registerValidate } from "../lib/validate";
import { useRouter } from "next/router";

const Register = () => {
  const [show, setShow] = useState({
    password: false,
    cpassword: false,
  });
  const router = useRouter();

  // formik
  const onSubmit = async (values) => {
    console.log(values);
    const options = {
      method :"POST",
      headers : {'Content-Type' : 'application/json'},
      body: JSON.stringify(values)
    };

    await fetch(`http://localhost:3000/api/auth/signup`, options).then(res => res.json()).then(data => {
      console.log(data);
      if(data) router.push(`/`)
    }).catch(err =>{
      console.log(err.message);
    })
  };

  const formik = useFormik({
    initialValues: {
      username: "",
      email: "",
      password: "",
      cpassword: "",
    },
    validate: registerValidate,
    onSubmit,
  });

  return (
    <Layout>
      <Head>
        <title>Auth-app-login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="w-3/4 mx-auto flex flex-col gap-10">
        <div className="title">
          <h1 className="text-gray-800 text-4xl font-bold py-4">Register</h1>
          <p className="w-3/4 mx-auto text-gray-400">
            It is a long established fact that a reader will be distracted.
          </p>
        </div>

        <form
          className="flex flex-col gap-5"
          action="submit"
          onSubmit={formik.handleSubmit}
        >
          <div
            className={`${styles.input_group} ${
              formik.errors.username &&
              formik.touched.username &&
              "border-rose-500"
            }`}
          >
            <input
              className={styles.input_text}
              type="text"
              name="username"
              placeholder="User name"
              {...formik.getFieldProps("username")}
            />
            <span className="icon flex items-center px-4">
              <HiOutlineUser size={25} />
            </span>
          </div>
          <div
            className={`${styles.input_group} ${
              formik.errors.email && formik.touched.email && "border-rose-500"
            }`}
          >
            <input
              className={styles.input_text}
              type="email"
              name="email"
              placeholder="email"
              {...formik.getFieldProps("email")}
            />
            <span className="icon flex items-center px-4">
              <HiAtSymbol size={25} />
            </span>
          </div>
          <div
            className={`${styles.input_group} ${
              formik.errors.password &&
              formik.touched.password &&
              "border-rose-500"
            }`}
          >
            <input
              className={styles.input_text}
              type={show.password ? "text" : "password"}
              name="password"
              placeholder="password"
              {...formik.getFieldProps("password")}
            />
            <span
              className="icon flex items-center px-4 hover:text-[#6366f1] cursor-pointer"
              onClick={() => setShow({ ...show, password: !show.password })}
            >
              <HiFingerPrint size={25} />
            </span>
          </div>
          <div
            className={`${styles.input_group} ${
              formik.errors.cpassword &&
              formik.touched.cpassword &&
              "border-rose-500"
            }`}
          >
            <input
              className={styles.input_text}
              type={show.cpassword ? "text" : "password"}
              name="cpassword"
              placeholder="Confirm Password"
              {...formik.getFieldProps("cpassword")}
            />
            <span
              className="icon flex items-center px-4 hover:text-[#6366f1] cursor-pointer"
              onClick={() => setShow({ ...show, cpassword: !show.cpassword })}
            >
              <HiFingerPrint size={25} />
            </span>
          </div>
          <div className="input-button">
            <button type="submit" className={`${styles.button}`}>
              Sign Up
            </button>
          </div>
        </form>
        <div className="text-center text-gray-400 flex justify-center gap-2">
          Have an account?
          <Link href="/login">
            <span className="text-blue-800 underline">Login</span>
          </Link>
        </div>
      </section>
    </Layout>
  );
};

export default Register;
